import customtkinter as ctk
import mysql.connector as sql
import tkintermapview
import requests
from tkinter import messagebox

window = ctk.CTk()
window.geometry('600x400')
window.title("TRAVEL SYSTEM")


conn = sql.connect(
    host='localhost',
    user='root',
    password='root',
    use_pure=True,
    charset='utf8'
)
cursor = conn.cursor()


cursor.execute('CREATE DATABASE IF NOT EXISTS TRAVEL_SYSTEM;')
cursor.execute('USE TRAVEL_SYSTEM;')
cursor.execute('CREATE TABLE IF NOT EXISTS LOGIN_INFO (USERNAME VARCHAR(50),PASSWORD VARCHAR(50));')
cursor.execute('CREATE TABLE IF NOT EXISTS USER_INFO (USERNAME VARCHAR(50),PASSWORD VARCHAR(50),EMAIL VARCHAR(50),PHNO INT(12));')

destroyer=''



def login_page():
    global loginpage
    loginpage = ctk.CTkFrame(master=window, fg_color='#d7d9d7')
    loginpage.pack(expand=True, fill='both')
    placeholder = ctk.CTkFrame(loginpage, fg_color='#ffffff',height=300,width=300,corner_radius=30)
    placeholder.pack_propagate(False)
    placeholder.pack(expand=True)
    placeholder2=ctk.CTkFrame(placeholder, fg_color='#ffffff')
    placeholder2.pack(pady=45)
    username = ctk.CTkEntry(master=placeholder2, placeholder_text='Username', corner_radius=20, height=40, width=200, border_width=0,fg_color='#d7d9d7',text_color='#000000')
    username.pack(anchor='center')
    password = ctk.CTkEntry(master=placeholder2, placeholder_text='Password', corner_radius=20, height=40, width=200, border_width=0,show='*',fg_color='#d7d9d7',text_color='#000000')
    password.pack(pady=10,anchor='center')

    def check_user():
        username1 = username.get()
        password1= password.get()
        cursor.execute('SELECT PASSWORD FROM LOGIN_INFO WHERE USERNAME=%s;',(username1,))
        sqlusername= cursor.fetchall()
        for i in sqlusername:
            for j in i:
                if j==password1:
                    print('LOGIN SUCESSFUl')
                    if password1=='admin' and username1=='admin':
                        print('ADMIN LOGIN')
                        admin_pannel()
                    else:
                        home_page()



    login_button = ctk.CTkButton(master=placeholder2, text='Login', fg_color='#3434e3', width=200, height=40, corner_radius=20,command=check_user)
    login_button.pack(pady=5)
    signup_button = ctk.CTkButton(master=placeholder2, text='Signup', fg_color='#3434e3', width=200, height=40,
                                 corner_radius=20, command=sign_up)
    signup_button.pack(pady=5)


def sign_up():
    loginpage.destroy()
    signuppage = ctk.CTkFrame(master=window, fg_color='#d7d9d7')
    signuppage.pack(expand=True, fill='both')
    placeholder = ctk.CTkFrame(signuppage, fg_color='#ffffff',height=300,width=300,corner_radius=30)
    placeholder.pack_propagate(False)
    placeholder.pack(expand=True)
    placeholder2=ctk.CTkFrame(placeholder,fg_color='#ffffff')
    placeholder2.pack(pady=20)

    Username = ctk.CTkEntry(master=placeholder2, placeholder_text='Username', corner_radius=20, height=40, width=200,
                            border_width=0,fg_color='#c2c8d1')
    Username.pack(pady=5,anchor='center')
    Email = ctk.CTkEntry(master=placeholder2, placeholder_text='Email', corner_radius=20, height=40, width=200,
                            border_width=0,fg_color='#c2c8d1')
    Email.pack(pady=5,anchor='center')
    password = ctk.CTkEntry(master=placeholder2, placeholder_text='Password', corner_radius=20, height=40, width=200,
                            border_width=0,show="*",fg_color='#c2c8d1')
    password.pack(pady=5,anchor='center')
    phno = ctk.CTkEntry(master=placeholder2, placeholder_text='Phone Number', corner_radius=20, height=40, width=200,
                            border_width=0,fg_color='#c2c8d1')
    phno.pack(pady=5,anchor='center')
    def sign_up():
        username1 = Username.get()
        password1 = password.get()
        Email1 = Email.get()
        phno1 = int(phno.get())
        cursor.execute('INSERT INTO USER_INFO VALUES(%s,%s,%s,%s);', (username1,password1,Email1,phno1,))
        cursor.execute('INSERT INTO LOGIN_INFO VALUES(%s,%s);', (username1, password1,))
        conn.commit()
        print('values added')
    def combine():
        sign_up()
        login_page()
        signuppage.destroy()
    signup_button = ctk.CTkButton(master=placeholder2, text='Signup', fg_color='#3434e3', width=200, height=40,
                                 corner_radius=20,command=combine)
    signup_button.pack(pady=10)

def home_page():
    global homepage
    global destroyer
    if destroyer=='Flights':
        myflightpage.destroy()
    elif destroyer=='Tracking':
        trackingpage.destroy()
    elif destroyer == 'Account':
        Accountpage.destroy()
    loginpage.destroy()

    homepage = ctk.CTkFrame(master=window, fg_color='#ffffff')
    homepage.pack(expand=True,fill='both')
    header=ctk.CTkFrame(master=homepage,fg_color='#3434e3',height=100)
    header.pack(side='top',fill='both',padx=0,pady=0)
    header.pack_propagate(False)
    invisi = ctk.CTkFrame(master=header,fg_color='#3434e3')
    home_button = ctk.CTkButton(master=invisi, text='Home', fg_color='#3434e3', width=100, height=40,
                                  corner_radius=10,font=('ariel',20,'bold'))
    flights = ctk.CTkButton(master=invisi, text='My Flights', fg_color='#3434e3', width=100, height=40,
                                corner_radius=10, font=('ariel', 20, 'bold'),command=my_flights_page)
    Tracking= ctk.CTkButton(master=invisi, text='Tracking', fg_color='#3434e3', width=100, height=40,
                                corner_radius=10, font=('ariel', 20, 'bold'),command=tracking_page)
    Account = ctk.CTkButton(master=invisi, text='Account', fg_color='#3434e3', width=100, height=40,
                                corner_radius=10, font=('ariel', 20, 'bold'),command=Account_page)
    name = ctk.CTkButton(master=header, text='TRAVEL SYSTEM', fg_color='#3434e3', width=90, height=40,
                             corner_radius=10, font=('ariel', 20, 'bold'))
    invisi.pack(pady=25)
    name.pack(side='left',pady=30)
    home_button.pack(anchor='center',side='left')
    flights.pack(anchor='center',side='left')
    Tracking.pack(anchor='center',side='left')
    Account.pack(anchor='center',side='left')
    search_section = ctk.CTkFrame(master=homepage, fg_color='#ffffff', height=70)
    search_section.pack(fill='x', pady=10, padx=10)
    search_section.pack_propagate(False)
    invis_frame = ctk.CTkFrame(master=search_section, fg_color='#ffffff')
    invis_frame.pack(side='left', anchor='w')
    from_entry = ctk.CTkEntry(master=invis_frame, fg_color='#c2c8d1', corner_radius=30,
                              placeholder_text='From', border_width=0, height=50, width=150,
                              font=('ariel', 15))
    from_entry.pack(side='left', padx=(0, 5))
    to_entry = ctk.CTkEntry(master=invis_frame, fg_color='#c2c8d1', corner_radius=30,
                            placeholder_text='To', border_width=0, height=50, width=150,
                            font=('ariel', 15))
    to_entry.pack(side='left', padx=5)
    date_entry = ctk.CTkEntry(master=invis_frame, fg_color='#c2c8d1', corner_radius=30,
                        placeholder_text='Date(dd/mm/yyyy)', border_width=0, height=50,
                        width=200, font=('ariel', 15))
    date_entry.pack(side='left', padx=5)
    invis_frame2 = ctk.CTkFrame(master=search_section, fg_color='#ffffff')
    invis_frame2.pack(side='right', anchor='e')

    def search_flights(from_city, to_city, date, scroll_frame):
        for widget in scroll_frame.winfo_children():
            widget.destroy()

        try:
            query = '''SELECT FLIGHT_ID, AIRLINE, FROM_CITY, TO_CITY, DEPARTURE_TIME, 
                       ARRIVAL_TIME, FLIGHT_DATE, AVAILABLE_SEATS, PRICE, AIRCRAFT_TYPE 
                       FROM FLIGHTS WHERE FROM_CITY LIKE %s AND TO_CITY LIKE %s'''

            params = [f'%{from_city}%', f'%{to_city}%']
            if date.strip():
                query += ' AND FLIGHT_DATE = %s'
                params.append(date)

            cursor.execute(query, params)
            flights = cursor.fetchall()

            if not flights:
                no_results = ctk.CTkLabel(
                    master=scroll_frame,
                    text="No flights found matching your search criteria.",
                    font=('Arial', 16),
                    text_color='#666666'
                )
                no_results.pack(pady=20)
                return
            for flight in flights:
                flight_id, airline, from_loc, to_loc, dep_time, arr_time, flight_date, available_seats, price, aircraft = flight
                flight_card = ctk.CTkFrame(
                    master=scroll_frame,
                    fg_color='#ffffff',
                    corner_radius=15,
                    border_width=2,
                    border_color='#e0e0e0'
                )
                flight_card.pack(fill='x', pady=10, padx=20)
                header_frame = ctk.CTkFrame(master=flight_card, fg_color='#f8f9fa', corner_radius=10)
                header_frame.pack(fill='x', pady=10, padx=15)

                airline_label = ctk.CTkLabel(
                    master=header_frame,
                    text=f"{airline} - {flight_id}",
                    font=('Arial', 18, 'bold'),
                    text_color='#2c3e50'
                )
                airline_label.pack(side='left', pady=10, padx=10)

                aircraft_label = ctk.CTkLabel(
                    master=header_frame,
                    text=f"Aircraft: {aircraft}",
                    font=('Arial', 12),
                    text_color='#7f8c8d'
                )
                aircraft_label.pack(side='right', pady=10, padx=10)
                details_frame = ctk.CTkFrame(master=flight_card, fg_color='transparent')
                details_frame.pack(fill='x', pady=5, padx=15)
                route_frame = ctk.CTkFrame(master=details_frame, fg_color='transparent')
                route_frame.pack(fill='x', pady=5)
                route_text = f"{from_loc} → {to_loc}"
                route_label = ctk.CTkLabel(
                    master=route_frame,
                    text=route_text,
                    font=('Arial', 16, 'bold'),
                    text_color='#34495e'
                )
                route_label.pack(side='left')
                date_label = ctk.CTkLabel(
                    master=route_frame,
                    text=f"Date: {flight_date}",
                    font=('Arial', 14),
                    text_color='#7f8c8d'
                )
                date_label.pack(side='right')
                info_frame = ctk.CTkFrame(master=details_frame, fg_color='transparent')
                info_frame.pack(fill='x', pady=5)
                time_text = f"Departure: {dep_time} | Arrival: {arr_time}"
                time_label = ctk.CTkLabel(
                    master=info_frame,
                    text=time_text,
                    font=('Arial', 14),
                    text_color='#2c3e50'
                )
                time_label.pack(side='left')
                seats_label = ctk.CTkLabel(
                    master=info_frame,
                    text=f"Available Seats: {available_seats}",
                    font=('Arial', 14),
                    text_color='#27ae60' if available_seats > 0 else '#e74c3c'
                )
                seats_label.pack(side='right')
                bottom_frame = ctk.CTkFrame(master=flight_card, fg_color='transparent')
                bottom_frame.pack(fill='x', pady=10, padx=15)

                price_label = ctk.CTkLabel(
                    master=bottom_frame,
                    text=f"₹{price:.2f}",
                    font=('Arial', 20, 'bold'),
                    text_color='#e67e22'
                )
                price_label.pack(side='left')
                def book_button_screen():
                    update_query = "UPDATE FLIGHTS SET AVAILABLE_SEATS=AVAILABLE_SEATS-1 WHERE FLIGHT_ID=%s AND AIRLINE=%s"
                    cursor.execute(update_query, (flight_id, airline))
                    conn.commit()
                    messagebox.showinfo("SUCCESS", f'Booking confirmed for flight {flight_id}!')
                    search_flights(from_entry.get(), to_entry.get(), date_entry.get(), scroll_frame)


                if available_seats > 0:
                    book_button = ctk.CTkButton(
                        master=bottom_frame,
                        text="Book Now",
                        fg_color='#3434e3',
                        hover_color='#2929cc',
                        corner_radius=20,
                        font=('Arial', 14, 'bold'),
                        command=book_button_screen
                    )
                    book_button.pack(side='right', padx=(10, 0))
                else:
                    sold_out_label = ctk.CTkLabel(
                        master=bottom_frame,
                        text="SOLD OUT",
                        font=('Arial', 14, 'bold'),
                        text_color='#e74c3c'
                    )
                    sold_out_label.pack(side='right')

        except:
            pass

    scroll_frame = ctk.CTkScrollableFrame(master=homepage, fg_color='#f0f0f0')
    scroll_frame.pack(expand=True, fill='both', pady=(0, 10), padx=10)
    search_flight = ctk.CTkButton(master=invis_frame2, text='Search', fg_color='#3434e3',
                                  height=50, width=150, corner_radius=30, font=('ariel', 15),command=lambda: search_flights(from_entry.get(), to_entry.get(), date_entry.get(), scroll_frame))
    search_flight.pack()

    destroyer = 'Home'


def my_flights_page():
    global destroyer
    global myflightpage
    if destroyer=='Home':
        homepage.destroy()
    elif destroyer=='Tracking':
        trackingpage.destroy()
    elif destroyer == 'Account':
        Accountpage.destroy()
    myflightpage = ctk.CTkFrame(master=window, fg_color='#ffffff')
    myflightpage.pack(expand=True,fill='both')
    header=ctk.CTkFrame(master=myflightpage,fg_color='#3434e3',height=100)
    header.pack(side='top',fill='both',padx=0,pady=0)
    header.pack_propagate(False)
    invisi = ctk.CTkFrame(master=header,fg_color='#3434e3')
    home_button = ctk.CTkButton(master=invisi, text='Home', fg_color='#3434e3', width=100, height=40,
                                  corner_radius=10,font=('ariel',20,'bold'),command=home_page)
    flights = ctk.CTkButton(master=invisi, text=' My Flights', fg_color='#3434e3', width=100, height=40,
                                corner_radius=10, font=('ariel', 20, 'bold'))
    Tracking= ctk.CTkButton(master=invisi, text='Tracking', fg_color='#3434e3', width=100, height=40,
                                corner_radius=10, font=('ariel', 20, 'bold'),command=tracking_page)
    Account = ctk.CTkButton(master=invisi, text='Account', fg_color='#3434e3', width=100, height=40,
                                corner_radius=10, font=('ariel', 20, 'bold'),command=Account_page)
    name = ctk.CTkButton(master=header, text='TRAVEL SYSTEM', fg_color='#3434e3', width=90, height=40,
                             corner_radius=10, font=('ariel', 20, 'bold'))
    invisi.pack(pady=25)
    name.pack(side='left',pady=30)
    home_button.pack(anchor='center',side='left')
    flights.pack(anchor='center',side='left')
    Tracking.pack(anchor='center',side='left')
    Account.pack(anchor='center',side='left')
    destroyer='Flights'

def tracking_page():
    global trackingpage
    global destroyer
    if destroyer=='Home':
        homepage.destroy()
    elif destroyer=='Flights':
        myflightpage.destroy()
    elif destroyer == 'Account':
        Accountpage.destroy()
    trackingpage = ctk.CTkFrame(master=window, fg_color='#ffffff')
    trackingpage.pack(expand=True, fill='both')
    header = ctk.CTkFrame(master=trackingpage, fg_color='#3434e3', height=100)
    header.pack(side='top', fill='both', padx=0, pady=0)
    header.pack_propagate(False)
    invisi = ctk.CTkFrame(master=header, fg_color='#3434e3')
    home_button = ctk.CTkButton(master=invisi, text='Home', fg_color='#3434e3', width=100, height=40,
                                corner_radius=10, font=('ariel', 20, 'bold'), command=home_page)
    flights = ctk.CTkButton(master=invisi, text='My Flights', fg_color='#3434e3', width=100, height=40,
                            corner_radius=10, font=('ariel', 20, 'bold'), command=my_flights_page)
    Tracking = ctk.CTkButton(master=invisi, text='Tracking', fg_color='#3434e3', width=100, height=40,
                             corner_radius=10, font=('ariel', 20, 'bold'))
    Account = ctk.CTkButton(master=invisi, text='Account', fg_color='#3434e3', width=100, height=40,
                             corner_radius=10, font=('ariel', 20, 'bold'),command=Account_page)
    name = ctk.CTkButton(master=header, text='TRAVEL SYSTEM', fg_color='#3434e3', width=90, height=40,
                         corner_radius=10, font=('ariel', 20, 'bold'))
    invisi.pack(pady=25)
    name.pack(side='left', pady=30)
    home_button.pack(anchor='center', side='left')
    flights.pack(anchor='center', side='left')
    Tracking.pack(anchor='center', side='left')
    Account.pack(anchor='center', side='left')
    map_frame=ctk.CTkFrame(master=trackingpage,width=825,height=650)
    map_frame.pack(anchor='w',pady=45,padx=30)
    map_widget = tkintermapview.TkinterMapView(master=map_frame, width=800, height=800, corner_radius=0)
    map_widget.pack()
    def plane_location():
        global marker
        global flight
        call_sign=search_flight_entry.get()
        def get_flight_by_callsign(callsign):
            url = "https://opensky-network.org/api/states/all"
            response = requests.get(url)
            data = response.json()
            print(data)
            all_flights = data['states']
            results = []
            for flight in all_flights:
                if flight[1] and flight[1].strip() == callsign.strip():
                    flight_data = {
                        'icao24': flight[0],
                        'callsign': flight[1],
                        'longitude': flight[5],
                        'latitude': flight[6],
                        'altitude': flight[7],
                        'on_ground': flight[8],
                        'velocity': flight[9],
                        'heading': flight[10]
                    }
                    results.append(flight_data)
            print(results)
            return results
        if len(call_sign) >= 8:
            pass
        else:
            call_sign = call_sign + ' ' * (8 - len(call_sign))
        flight_data=get_flight_by_callsign(call_sign)
        if flight_data == []:
                messagebox.showinfo("ERROR",'NO FLIGHT FOUND')
        else:
            flight=flight_data[0]
            marker = map_widget.set_marker(flight['latitude'], flight['longitude'], text=flight['callsign'])
            map_widget.set_position(flight['latitude'], flight['longitude'])
            map_widget.set_zoom(6)
        data_frame = ctk.CTkFrame(master=trackingpage, fg_color='#d7d9d7', width=660, height=560)
        data_frame.pack_propagate(False)
        data_frame.place(x=850, y=225)
        if flight == []:
            pass
        else:
            text_info = "ICAO24:{}\nCallsign:{}\nLongitde:{}\nLatitude:{}\nAltitude:{}\nVelocity:{}\nHeading:{}".format(
                flight['icao24'],
                flight['callsign'],
                flight['longitude'],
                flight['latitude'],
                flight['altitude'],
                flight['velocity'],
                flight['heading'])
            data_label = ctk.CTkLabel(master=data_frame, text=text_info,
                                      text_color="black", font=("Arial", 25),justify='left')

            data_label.pack(anchor='nw',pady=20,padx=20)


    search_flight_entry=ctk.CTkEntry(master=trackingpage,placeholder_text='🔍Enter Callsign',border_width=0,height=50,width=520,fg_color='#d7d9d7',corner_radius=40,text_color="#000000",font=('ariel', 15))
    search_flight_entry.place(x=850,y=150)
    search_flight_button=ctk.CTkButton(master=trackingpage,text="SEARCH",fg_color='#3434e3',height=50,corner_radius=40,font=('ariel', 15),command=plane_location)
    search_flight_button.place(x=1375,y=150)
    destroyer = 'Tracking'
def Account_page():
    global Accountpage
    global destroyer
    if destroyer == 'Home':
        homepage.destroy()
    elif destroyer == 'Flights':
        myflightpage.destroy()
    elif destroyer == 'Tracking':
        trackingpage.destroy()
    Accountpage = ctk.CTkFrame(master=window, fg_color='#ffffff')
    Accountpage.pack(expand=True, fill='both')
    header = ctk.CTkFrame(master=Accountpage, fg_color='#3434e3', height=100)
    header.pack(side='top', fill='both', padx=0, pady=0)
    header.pack_propagate(False)
    invisi = ctk.CTkFrame(master=header, fg_color='#3434e3')
    home_button = ctk.CTkButton(master=invisi, text='Home', fg_color='#3434e3', width=100, height=40,
                                corner_radius=10, font=('ariel', 20, 'bold'), command=home_page)
    flights = ctk.CTkButton(master=invisi, text='My Flights', fg_color='#3434e3', width=100, height=40,
                            corner_radius=10, font=('ariel', 20, 'bold'), command=my_flights_page)
    Tracking = ctk.CTkButton(master=invisi, text='Tracking', fg_color='#3434e3', width=100, height=40,
                             corner_radius=10, font=('ariel', 20, 'bold'),command=tracking_page)
    Account = ctk.CTkButton(master=invisi, text='Account', fg_color='#3434e3', width=100, height=40,
                            corner_radius=10, font=('ariel', 20, 'bold'))
    name = ctk.CTkButton(master=header, text='TRAVEL SYSTEM', fg_color='#3434e3', width=90, height=40,
                         corner_radius=10, font=('ariel', 20, 'bold'))
    invisi.pack(pady=25)
    name.pack(side='left', pady=30)
    home_button.pack(anchor='center', side='left')
    flights.pack(anchor='center', side='left')
    Tracking.pack(anchor='center', side='left')
    Account.pack(anchor='center', side='left')
    user_display=ctk.CTkFrame(master=Accountpage,fg_color='#d7d9d7',height=450,width=350,corner_radius=30)
    user_display.pack_propagate(False)
    user_display.pack(pady=130,padx=20)
    new_frame=ctk.CTkFrame(master=user_display,fg_color='#d7d9d7')
    new_frame.pack(pady=50)
    def change_credentials():
        new_user1=new_user.get()
        old_user1=old_user.get()
        old_pass1=old_pass.get()
        new_pass1=new_pass.get()
        new_phone1=new_phone.get()
        new_email1=new_email.get()
        try:
            query='SELECT * FROM LOGIN_INFO WHERE USERNAME=%s AND PASSWORD=%s;'
            cursor.execute(query,(old_user1,old_pass1,))
            result=cursor.fetchone()
            print(result)
            if result[0] == old_user1 and result[1] == old_pass1:
                query='UPDATE USER_INFO SET USERNAME=%s,PASSWORD=%s,EMAIL=%s,PHNO=%s WHERE USERNAME=%s AND PASSWORD=%s'
                cursor.execute(query,(new_user1,new_pass1,new_email1,new_phone1,old_user1,old_pass1))
                conn.commit()
            else:
                messagebox.showinfo("ERROR", 'INVALID CREDENTIALS')
        except:
            messagebox.showinfo("ERROR", 'INVALID CREDENTIALS')

    new_user=ctk.CTkEntry(master=new_frame,width=250,corner_radius=30,fg_color='#919090',border_width=0,height=40,placeholder_text='New Username',placeholder_text_color='#ffffff')
    new_user.pack(pady=5)
    old_user=ctk.CTkEntry(master=new_frame,width=250,corner_radius=30,fg_color='#919090',border_width=0,height=40,placeholder_text='Old Username',placeholder_text_color='#ffffff')
    old_user.pack(pady=5)
    new_pass=ctk.CTkEntry(master=new_frame,width=250,corner_radius=30,fg_color='#919090',border_width=0,height=40,placeholder_text='New Password',placeholder_text_color='#ffffff',show='*')
    new_pass.pack(pady=5)
    old_pass=ctk.CTkEntry(master=new_frame,width=250,corner_radius=30,fg_color='#919090',border_width=0,height=40,placeholder_text='Old Password',placeholder_text_color='#ffffff',show='*')
    old_pass.pack(pady=5)
    new_phone=ctk.CTkEntry(master=new_frame,width=250,corner_radius=30,fg_color='#919090',border_width=0,height=40,placeholder_text='New Phone number',placeholder_text_color='#ffffff')
    new_phone.pack(pady=5)
    new_email=ctk.CTkEntry(master=new_frame,width=250,corner_radius=30,fg_color='#919090',border_width=0,height=40,placeholder_text='New Email',placeholder_text_color='#ffffff')
    new_email.pack(pady=5)
    new_button=ctk.CTkButton(master=new_frame,width=250,corner_radius=30,fg_color='#3434e3',border_width=0,height=40,text='Change',command=change_credentials,font=('ariel',15,'bold'))
    new_button.pack(pady=5)
    destroyer = 'Account'

def admin_pannel():
    loginpage.destroy()
    adminframe=ctk.CTkFrame(master=window,fg_color='#ffffff')
    adminframe.pack(expand=True,fill='both')

    cursor.execute('''CREATE TABLE IF NOT EXISTS FLIGHTS (FLIGHT_ID VARCHAR(20) PRIMARY KEY, AIRLINE VARCHAR(100), FROM_CITY VARCHAR(100), TO_CITY VARCHAR(100), DEPARTURE_TIME VARCHAR(20), ARRIVAL_TIME VARCHAR(20), FLIGHT_DATE VARCHAR(15), TOTAL_SEATS INT, AVAILABLE_SEATS INT, PRICE DECIMAL(10,2), AIRCRAFT_TYPE VARCHAR(50));''')
    def add_flight():
        header = ctk.CTkFrame(master=adminframe, fg_color='#3434e3', height=100)
        header.pack(side='top', fill='both', padx=0, pady=0)
        header.pack_propagate(False)
        invisi = ctk.CTkFrame(master=header, fg_color='#3434e3')
        add_flight = ctk.CTkButton(master=invisi, text='Add Flight', fg_color='#3434e3', width=100, height=40,
                                   corner_radius=10, font=('ariel', 20, 'bold'))
        bookings = ctk.CTkButton(master=invisi, text='Bookings', fg_color='#3434e3', width=100, height=40,
                                 corner_radius=10, font=('ariel', 20, 'bold'))

        invisi.pack(pady=25)
        add_flight.pack(anchor='center', side='left')
        bookings.pack(anchor='center', side='left')

        addflightframe = ctk.CTkFrame(master=adminframe, fg_color='#d7d9d7', height=600, width=350, corner_radius=30)
        addflightframe.pack_propagate(False)
        addflightframe.pack(pady=80, padx=20)
        new_frame = ctk.CTkFrame(master=addflightframe, fg_color='#d7d9d7')
        new_frame.pack(pady=20)
        def enter_flight_data():
            flight_id_value = flight_id.get().strip()
            airline_value = airline.get().strip()
            from_city_value = from_city.get().strip()
            to_city_value = to_city.get().strip()
            departure_time_value = departure_time.get().strip()
            arrival_time_value = arrival_time.get().strip()
            flight_date_value = flight_date.get().strip()
            total_seats_value = int(total_seats.get().strip())
            price_value = float(price.get().strip())
            aircraft_type_value = aircraft_type.get().strip()
            try:
                query='''INSERT INTO FLIGHTS VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)'''
                cursor.execute(query,(flight_id_value,airline_value,from_city_value,to_city_value,
                                    departure_time_value,arrival_time_value,flight_date_value,
                                    total_seats_value,total_seats_value,price_value,aircraft_type_value))
                conn.commit()
                messagebox.showinfo("SUCESS", 'FLIGHT ADDED')
            except:
                messagebox.showinfo("ERROR", 'FLIGHT DATA NOT ADDED')

        flight_id = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                                 height=40, placeholder_text='Flight ID', placeholder_text_color='#ffffff')
        flight_id.pack(pady=5)
        airline = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                               height=40, placeholder_text='Airline', placeholder_text_color='#ffffff')
        airline.pack(pady=5)
        from_city = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                                 height=40, placeholder_text='From', placeholder_text_color='#ffffff')
        from_city.pack(pady=5)
        to_city = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                               height=40, placeholder_text='To', placeholder_text_color='#ffffff')
        to_city.pack(pady=5)
        departure_time = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                                      height=40, placeholder_text='Departure Time', placeholder_text_color='#ffffff')
        departure_time.pack(pady=5)
        arrival_time = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                                    height=40, placeholder_text='Arrival Time', placeholder_text_color='#ffffff')
        arrival_time.pack(pady=5)
        flight_date = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                                   height=40, placeholder_text='Flight Date', placeholder_text_color='#ffffff')
        flight_date.pack(pady=5)
        total_seats = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                                   height=40, placeholder_text='Total Seats', placeholder_text_color='#ffffff')
        total_seats.pack(pady=5)
        price = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                             height=40, placeholder_text='Price', placeholder_text_color='#ffffff')
        price.pack(pady=5)
        aircraft_type = ctk.CTkEntry(master=new_frame, width=250, corner_radius=30, fg_color='#919090', border_width=0,
                                     height=40, placeholder_text='Aircraft Type', placeholder_text_color='#ffffff')
        aircraft_type.pack(pady=5)
        add_button = ctk.CTkButton(master=new_frame, width=250, corner_radius=30, fg_color='#3434e3', border_width=0,
                                   height=40, text='Add', font=('ariel', 15, 'bold'),command=enter_flight_data)
        add_button.pack(pady=5)


    add_flight()

login_page()
window.mainloop()
